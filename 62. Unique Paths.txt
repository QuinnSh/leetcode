 class Solution:
 2     # @return an integer
 3     def uniquePaths(self, m, n):
 4         # none case
 5         if m < 1 or n < 1:
 6             return 0
 7         # special case
 8         if m==1 or n==1 :
 9             return 1
10         
11         # dp
12         dp = [[0 for col in range(n)] for row in range(m)]
13         # the elements in frist row have only one avaialbe pre-node
14         for i in range(n):
15             dp[0][i]=1
16         # the elements in first column have only one avaialble pre-node
17         for i in range(m):
18             dp[i][0]=1
19         # iterator other elements in the 2D-matrix
20         for row in range(1,m):
21             for col in range(1,n):
22                 dp[row][col]=dp[row-1][col]+dp[row][col-1]
23         
24         return dp[m-1][n-1]